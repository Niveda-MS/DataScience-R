setwd
getwd()
##import data##
train <- read.csv('C:\\Users\\USER\\Desktop\\DSP14\\titanic train.csv',header = TRUE, sep=',', na.strings =c(""))
summary(train)
str(train)
boxplot(train$Age)
boxplot(train$Fare)
library(lattice)
library(survival)
library(Formula)
library(ggplot2)
library(Hmisc) #to install hmisc top 4 are required
library(e1071)
skewness(train$Fare)
describe(train)

#convert to factor
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
str(train)

#missing value imputation - Age
train$Age <- ifelse(is.na(train$Age),median(train$Age,na.rm = TRUE),train$Age)
#na.rm leaves away the na values to calculate the mean 
sum(is.na(train$Age))

#Missin value imputation - Embarked 
sum(is.na(train$Embarked))
table(train$Embarked)
train$Embarked <- as.character(train$Embarked)
train$Embarked <- ifelse(is.na(train$Embarked),'S',train$Embarked)
train$Embarked <- as.factor(train$Embarked)
skewness(train$Age)

cor(train$Age,train$Fare)
cor(train$SibSp,train$Parch)

### logistic regression ####
names(train)
model <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,family ='binomial',data = train)
summary(model)

train$preds <-predict(model,train, type = 'response')
summary(train$preds)
View(train$preds)
train$outcome <- ifelse(train$preds>=0.5,1,0)

table(train$Survived,train$outcome) 
#solution - 477 true negative , 240 true positive , 72 false positive , 102 false negative

train$ln_fare <- log(train$Fare)
train$ln_fare <- ifelse(train$ln_fare ==-Inf,0,train$ln_fare)
model2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+ln_fare+Embarked,family ='binomial',data = train)
train$preds_model2 <- predict(model2, train, type='response')
train$outcome_model2 <- ifelse(train$preds_model2>=0.5,1,0)
table(train$Survived,train$outcome_model2)

########---------decision tree---------------------------#################################

install.packages('party')
library('party')
install.packages('grid')
install.packages('mvtnorm')
install.packages('modetools')
install.packages('strcchange')
install.packages('stats4')
install.packages('zoo')
install.packages('sandwich')
png(file = 'decision_tree.png')
names(train)
model_tree <- ctree(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, data = train)
plot(model_tree)
dev.off()

summary(model_tree)
model_tree
getwd()


###### Confusion Matrix - Decision Tree ######
train$preds_modeltree <- predict(model_tree, train)
table(train$Survived, train$preds_modeltree)

#with the answer 
#(492+246)/(492+57+96+246) = 82.8%


############ ---Random Forest----###############
install.packages('randomForest')
library('randomForest')
model_rf <- randomForest(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, data = train)
model_rf
#increasing and decreasing the number of trees

model_rf <- randomForest(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, ntree=750, data = train)

model_rf <- randomForest(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, ntree=1000, data = train)

model_rf <- randomForest(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, ntree=500, data = train)

model_rf <- randomForest(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, ntree=450, data = train)

######------------------Test data--------------------------##################

test <- read.csv('C:\\Users\\USER\\Desktop\\DSP14\\titanic test.csv',header = TRUE, sep=',', na.strings =c(""))
summary(test)
str(test)
test$Pclass <- as.factor(test$Pclass)
sum(is.na(test$Age))
sum(is.na(test$Embarked))
sum(is.na(test$Fare))
test$Age <- ifelse(is.na(test$Age),median(test$Age,na.rm = TRUE),test$Age)
test$Fare <- ifelse(is.na(test$Fare),median(test$Fare,na.rm = TRUE),test$Fare)

test$preds <- predict(model,  test, type = 'response')
test$outcome <- ifelse(test$preds >= 0.5,1,0)

write.csv(test,'finalpreds.csv')
getwd()


